
function div_annots = findStimAnnots(metadata,annots_new,numannots)
%function div_annots = findStimAnnots(metadata,annots_new,numannots,evname)
%%
annot_neg = [];annot_curr = []; annot_pulsdur=[]; annot_freq =[]; annot_bi_mono = []; annot_note = {}; annot_stim={}; 
% annot_isi = []; annot_hekjep = [];
countcurr = 1; countstim=1; countlow = 1;countpuls = 1;
countfreq = 1;
% countisi = 1; counthekjep = 1;

for i=numannots
    %%
    if ~isempty(regexp(lower(annots_new{i,2}),'neg', 'once'))
        annot_neg = [annot_neg;annots_new{i,1}]; %#ok<*AGROW>
    end
    
    if ~isempty(regexp(lower(annots_new{i,2}),'_[0-9.]+ma', 'once')) % to prevent electrode SMAL to be seen as pulse current
        
        annot_curr(countcurr,1) = annots_new{i,1};
        annot_curr(countcurr,2) = str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),'_[0-9.]+ma','match'),'_','ma')));
        countcurr = countcurr+1;
    end
    
    if ~isempty(regexp(lower(annots_new{i,2}),' [0-9.]+ma', 'once')) 
        
        annot_curr(countcurr,1) = annots_new{i,1};
        annot_curr(countcurr,2) = str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),' [0-9.]+ma','match'),' ','ma')));  % if the annotation looks like this C01-C02 1.0mA 1.0Hz 1025usec --> it is automatically generated by Micromed
        countcurr = countcurr+1;
    end

    if ~isempty(regexp(lower(annots_new{i,2}),'µsec', 'once'))
        annot_pulsdur(countpuls,1) = annots_new{i,1};
        
        if ~isnan(str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),' [0-9]+µsec','match'),' ','µsec'))))
            annot_pulsdur(countpuls,2) = str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),' [0-9]+µsec','match'),' ','µsec')))/1000000; % from usec to sec
        elseif ~isnan(str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),'_[0-9]+usec','match'),'_','usec'))))
            annot_pulsdur(countpuls,2) = str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),'_[0-9]+usec','match'),'_','usec')))/1000000; % from usec to sec
        end
        
        countpuls = countpuls +1;
    end
    
    if ~isempty(regexp(lower(annots_new{i,2}),'hz', 'once'))
        if ~isnan(str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),' [0-9.]+hz','match'),' ','hz'))))
            annot_freq(countfreq,2) = str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),' [0-9.]+hz','match'),' ','hz')));
        elseif ~isnan(str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),'_[0-9.]+hz','match'),'_','hz'))))
            annot_freq(countfreq,2) = str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),'_[0-9.]+hz','match'),'_','hz'))); 
        else
            continue
        end
        annot_freq(countfreq,1) = annots_new{i,1};
        countfreq = countfreq +1;
    end 
   
    if  ~isempty(regexp(lower(annots_new{i,2}),'_bi', 'once'))
        annot_bi_mono = [annot_bi_mono;annots_new{i,1}];
    end
    
    if ~isempty(regexp(lower(annots_new{i,2}),'requested', 'once'))
        annot_note{countlow,1} = annots_new{i,1};
        annot_note{countlow,2} = annots_new{i,2};
        countlow = countlow+1;
    end
    
    %
    % if evname == "SPESpaired" % SPES-IN paired pulse study
    % 
    %     if ~isempty(regexp(lower(annots_new{i,2}),'_[0-9.]+isi', 'once')) % interstimulus interval
    % 
    %         annot_isi(countisi,1) = annots_new{i,1};
    %         annot_isi(countisi,2) = str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),'_[0-9.]+isi','match'),'_','isi')));
    %         countisi = countisi+1;
    %     end
    %     if ~isempty(regexp(lower(annots_new{i,2}),'_[0-9.]+#p', 'once')) % nr of pulses, 1, 2 or 20
    % 
    %         annot_hekjep(counthekjep,1) = annots_new{i,1};
    %         annot_hekjep(counthekjep,2) = str2double(cell2mat(extractBetween(regexp(lower(annots_new{i,2}),'_[0-9.]+#p','match'),'_','#p')));
    %         counthekjep = counthekjep+1;
    %     end
    % 
    % end


    % stimulus pair
    stimnames = {}; stimnums = {};
    if ~isempty(regexp(annots_new{i,2},'_', 'once')) % if there is a _ in the annotation (normally, this is a SPES annotation)
        annotsplit = strsplit(annots_new{i,2},'_');
        % stimpair
        stimnames = regexp(lower(annotsplit{1}),'[a-z]*','match');
        stimnums = regexp(lower(annotsplit{1}),'\d*','match');
        
    elseif ~isempty(regexp(annots_new{i,2},'[-]', 'once')) % if the annotation looks like this C01-C02 1.0mA 1.0Hz 1025usec --> it is automatically generated by Micromed
        annotsplit = strsplit(annots_new{i,2},{'-',' '});
        
        % make sure that first two cells are indeed stimulus names
        if ~isempty(regexp(lower(annotsplit{1}),'[a-z]', 'once')) && ~isempty(regexp(lower(annotsplit{1}),'\d', 'once')) && ~isempty(regexp(lower(annotsplit{2}),'[a-z]','once')) && ~isempty(regexp(lower(annotsplit{2}),'\d','once'))
            % stimpair
            stimnames = cell(1); stimnums = cell(1);
            for chan =1:2
                channame = regexp(lower(annotsplit{chan}),'[a-z]*','match');
                channum = regexp(lower(annotsplit{chan}),'\d*','match');
                
                stimnames{chan} = channame{:};
                stimnums{chan} = channum{:};
            end
        end
    else % if there is no _ or automatically generated annotation
        annotsplit = strsplit(annots_new{i,2},'_');
        stimnames = regexp(annotsplit{1},'[a-zA-Z]*','match');
        stimnums = regexp(annotsplit{1},'\d*','match');
    end
    
    if size(stimnames,2) == 2 && size(stimnums,2) == 2
                
        [stimchan,stimnum] = findstimpair(stimnums,stimnames,metadata);
        
        annot_stim{countstim,1} = annots_new{i,1};
        annot_stim{countstim,2} = stimchan{1};
        annot_stim{countstim,3} = stimchan{2};
        annot_stim{countstim,4} = stimnum;
        countstim=countstim+1;
    end
    
    
end


div_annots.annot_neg = annot_neg;
div_annots.annot_curr = annot_curr;
div_annots.annot_pulsdur = annot_pulsdur;
div_annots.annot_freq = annot_freq;
div_annots.annot_bi_mono = annot_bi_mono;
div_annots.annot_note = annot_note;
div_annots.annot_stim = annot_stim;
% div_annots.annot_hekjep = annot_hekjep;
% div_annots.annot_isi = annot_isi;



end
